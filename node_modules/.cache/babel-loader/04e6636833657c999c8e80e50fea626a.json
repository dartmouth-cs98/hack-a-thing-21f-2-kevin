{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport './App.css';\nimport Web3 from 'web3';\nimport DaiToken from \"../abis/DaiToken.json\";\nimport DappToken from \"../abis/DappToken.json\";\nimport TokenFarm from \"../abis/TokenFarm.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      account: '0x0',\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, daiTokenData, daiToken, daiTokenBalance, dappTokenData, dappToken, _dappTokenBalance, tokenFarmData, tokenFarm, stakingBalance;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                console.log(networkId); // load DAI token\n\n                daiTokenData = DaiToken.networks[networkId];\n\n                if (!daiTokenData) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address);\n                this.setState({\n                  daiToken: daiToken\n                });\n                _context2.next = 15;\n                return daiToken.methods.balanceOf(this.state.account).call();\n\n              case 15:\n                daiTokenBalance = _context2.sent;\n                this.setState({\n                  daiTokenBalance: daiTokenBalance.toString()\n                });\n                _context2.next = 20;\n                break;\n\n              case 19:\n                window.alert('DaiToken contract not deployed to detected network');\n\n              case 20:\n                // load Dapp token\n                dappTokenData = DaiToken.networks[networkId];\n\n                if (!dappTokenData) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address);\n                this.setState({\n                  dappToken: dappToken\n                });\n                _context2.next = 26;\n                return dappToken.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                _dappTokenBalance = _context2.sent;\n                this.setState({\n                  dappTokenBalance: _dappTokenBalance.toString()\n                });\n                _context2.next = 31;\n                break;\n\n              case 30:\n                window.alert('DappToken contract not deployed to detected network');\n\n              case 31:\n                // load TokenFarm\n                tokenFarmData = TokenFarm.networks[networkId];\n\n                if (!tokenFarmData) {\n                  _context2.next = 41;\n                  break;\n                }\n\n                tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address);\n                this.setState({\n                  tokenFarm: tokenFarm\n                });\n                _context2.next = 37;\n                return tokenFarm.methods.balanceOf(this.state.account).call();\n\n              case 37:\n                stakingBalance = _context2.sent;\n                this.setState({\n                  dappTokenBalance: dappTokenBalance.toString()\n                });\n                _context2.next = 42;\n                break;\n\n              case 41:\n                window.alert('DappToken contract not deployed to detected network');\n\n              case 42:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected.');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          account: this.state.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"main\", {\n              role: \"main\",\n              className: \"col-lg-12 ml-auto mr-auto\",\n              style: {\n                maxWidth: '600px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content mr-auto ml-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"http://www.dappuniversity.com/bootcamp\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Hello, World!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/HackAThing2/hack-a-thing-21f-2-kevin/src/components/App.js"],"names":["React","Component","Navbar","Web3","DaiToken","DappToken","TokenFarm","App","props","state","account","daiToken","dappToken","tokenFarm","daiTokenBalance","dappTokenBalance","stakingBalance","loading","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","net","getId","networkId","console","log","daiTokenData","networks","Contract","abi","address","methods","balanceOf","call","toString","alert","dappTokenData","tokenFarmData","ethereum","enable","currentProvider","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport './App.css'\nimport Web3 from 'web3'\nimport DaiToken from \"../abis/DaiToken.json\"\nimport DappToken from \"../abis/DappToken.json\"\nimport TokenFarm from \"../abis/TokenFarm.json\"\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    console.log(networkId)\n\n    // load DAI token\n    const daiTokenData = DaiToken.networks[networkId]\n    if(daiTokenData) {\n      const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\n      this.setState({ daiToken })\n      let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\n      this.setState({ daiTokenBalance: daiTokenBalance.toString() })\n    } else {\n      window.alert('DaiToken contract not deployed to detected network')\n    }\n\n    // load Dapp token\n    const dappTokenData = DaiToken.networks[networkId]\n    if(dappTokenData) {\n      const dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address)\n      this.setState({ dappToken })\n      let dappTokenBalance = await dappToken.methods.balanceOf(this.state.account).call()\n      this.setState({ dappTokenBalance: dappTokenBalance.toString() })\n    } else {\n      window.alert('DappToken contract not deployed to detected network')\n    }\n\n    // load TokenFarm\n    const tokenFarmData = TokenFarm.networks[networkId]\n    if(tokenFarmData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({ tokenFarm })\n      let stakingBalance = await tokenFarm.methods.balanceOf(this.state.account).call()\n      this.setState({ dappTokenBalance: dappTokenBalance.toString() })\n    } else {\n      window.alert('DappToken contract not deployed to detected network')\n    }\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                </a>\n\n                <h1>Hello, World!</h1>\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}